{"pageProps":{"title":"Challenge - Const","challenge":{"id":"1669496531761","isDone":false,"isCorrect":false,"title":"Const","description":"In the code below we have a variable \"myNumber\" that is being changed by a random number.\n\nPrevent the variable from changing by changing its declaration with \"const\".","code":"[---editable---\nlet myNumber = 1;\n---editable---]\n[---hidden---\ntry{\n---hidden---]\nmyNumber = Math.random();\n[---hidden---\n}catch(e){}\nreturn myNumber;\n---hidden---]","testsCode":"test.describe('Const', () => {\n    test.it('The \"myNumber\" variable must keep with the value 1', () => {\n        const response = __challengeFunction;\n        test.expect(response).toBe(1);\n    });\n});","answer":"const myNumber = 1;myNumber = Math.random();\n","chosen":false},"previousChallenge":{"id":"1669495768588","isDone":false,"isCorrect":false,"title":"Declaring Variables","description":"Declare a variable \"myVariable\" with any value.\nThe value is not important.","code":"[---editable---//your code here\n\n---editable---]\n[---hidden---\nreturn myVariable;\n---hidden---]","testsCode":"test.describe('Declaring Variables', () => {\n    test.it('Declare a variable \"myVariable\" with any value.', () => {\n        const response = __challengeFunction;\n        test.expect(typeof response).not.toBe(\"undefined\");\n    });\n});","answer":"let myVariable = 22\n\n","chosen":false},"nextChallenge":{"id":"1669492526351","isDone":false,"isCorrect":false,"title":"Variables Types","description":"In the code below we have 3 variables declared.\nDefine a value for each variable following the following types:\n\nmyName (string)\nmyAge (number)\nisOpen (boolean)\n\nThe variable value is not important, just the type.","code":"let myName, myAge, isOpen;\n[---editable---\n// your code here\n\n---editable---]\n[---hidden---\nreturn () => [myName, myAge, isOpen]\n---hidden---]","testsCode":"test.describe('Declaring Variables', () => {\n    test.it('\"myName\" variable must be string', () => {\n        const [myName , myAge , isOpen] = __challengeFunction();\n        test.expect(typeof myName ).toBe('string');\n    });\n    test.it('\"myAge\" variable must be number', () => {\n        const [myName , myAge , isOpen] = __challengeFunction();\n        test.expect(typeof myAge ).toBe('number');\n    });\n    test.it('\"isOpen\" variable must be boolean', () => {\n        const [myName , myAge , isOpen] = __challengeFunction();\n        test.expect(typeof isOpen).toBe('boolean');\n    });\n});","answer":"// your code here\nvar name = 'Mewters';\nvar age = 7;\nvar isOpen = true;\n","chosen":false}},"__N_SSG":true}