{"pageProps":{"title":"Challenge - Double Array Elements","challenge":{"id":"1671644565822","isDone":false,"isCorrect":false,"title":"Double Array Elements","description":"Here we have a function called doubleElements that takes in an array of numbers. Returns a new array with each element doubled.","code":"function doubleElements(numbers){[---editable---\n\n\n---editable---]\n}[---hidden---return doubleElements;---hidden---]","testsCode":"test.describe('Double Array Elements', () => {\n    test.it('should return a new array with each element doubled - [1, 2, 3, 4, 5]', () => {\n        const response = __challengeFunction([1, 2, 3, 4, 5]);\n        test.expect(JSON.stringify(response)).toBe(JSON.stringify([2, 4, 6, 8, 10]));\n    });\n    test.it('should return a new array with each element doubled - [6, 10, 15, 9]', () => {\n        const response = __challengeFunction([6, 10, 15, 9]);\n        test.expect(JSON.stringify(response)).toBe(JSON.stringify([12, 20, 30, 18]));\n    });\n});","answer":"function doubleElements(numbers){    return numbers.map(n => n * 2);}","chosen":false},"previousChallenge":{"id":"1671643798211","isDone":false,"isCorrect":false,"title":"Find Maximum Value in Array","description":"In the code bellow you have a function called \"findMax\" that takes in an array of numbers. Return the maximum value in the array. If the array is empty, the function should return 0.","code":"function findMax(numbers){[---editable---\n\n\n---editable---]\n}[---hidden--- return findMax;---hidden---]","testsCode":"test.describe('Find Maximum Value in Array', () => {\n    test.it('should return the maximum value in the array [1, 2, 3, 4, 5]', () => {\n        const response = __challengeFunction([1, 2, 3, 4, 5]);\n        test.expect(response).toBe(5);\n    });\n    test.it('should return the maximum value in the array [7, 6, 8, 1, 3, 6]', () => {\n        const response = __challengeFunction([7, 6, 8, 1, 3, 6]);\n        test.expect(response).toBe(8);\n    });\n    test.it('should return 0 if the array is empty', () => {\n        const response = __challengeFunction([]);\n        test.expect(response).toBe(0);\n    });\n});","answer":"function findMax(numbers){    return numbers.length ? Math.max(...numbers) : 0;}","chosen":false},"nextChallenge":null},"__N_SSG":true}