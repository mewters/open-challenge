{"pageProps":{"title":"Challenge - Longest Property Name ","challenge":{"id":"1671646068140","isDone":false,"isCorrect":false,"title":"Longest Property Name ","description":"Create a function called getLongestPropertyName that takes in an object. Return the name of the property with the longest name. If the object is empty, the function should return null.","code":"function getLongestPropertyName(obj) {[---editable---\n  \n  \n  ---editable---]\n}[---hidden--- return getLongestPropertyName; ---hidden---]","testsCode":"test.describe('Get Longest Property Name', () => {\n  test.it('should return the name of the property with the longest name', () => {\n    const response = __challengeFunction({\n      name: 'John',\n      age: 30,\n      height: 180,\n    });\n    test.expect(response).toBe('height');\n  });\n  test.it('should return the name of the property with the longest name', () => {\n    const response = __challengeFunction({\n      name: 'John',\n      age: 30,\n      height: 180,\n      favoriteColor: 'blue'\n    });\n    test.expect(response).toBe('favoriteColor');\n  });\n  test.it('should return null if the object is empty', () => {\n    const response = __challengeFunction({});\n    test.expect(response).toBe(null);\n  });\n});","answer":"function getLongestPropertyName(obj) {  if (Object.keys(obj).length === 0) return null;\n  let maxLength = -Infinity;\n  let maxProp;\n  for (const prop in obj) {\n    if (prop.length > maxLength) {\n      maxLength = prop.length;\n      maxProp = prop;\n    }\n  }\n  return maxProp;}"},"previousChallenge":{"id":"1671645910706","isDone":false,"isCorrect":false,"title":"Largest Property Value ","description":"Create a function called getLargestPropertyValue that takes in an object. Return the value of the property with the largest value. If the object is empty, the function should return null.","code":"function getLargestPropertyValue(obj) {[---editable---\n  \n  \n  ---editable---]\n}[---hidden--- return getLargestPropertyValue; ---hidden---]","testsCode":"test.describe('Get Largest Property Value', () => {\n  test.it('should return the value of the property with the largest value', () => {\n    const response = __challengeFunction({\n      age: 30,\n      height: 180,\n      weight: 80\n    });\n    test.expect(response).toBe(180);\n  });\n  test.it('should return the value of the property with the largest value', () => {\n    const response = __challengeFunction({\n      age: 30,\n      height: 180,\n      weight: 80,\n      score: 1000\n    });\n    test.expect(response).toBe(1000);\n  });\n  test.it('should return null if the object is empty', () => {\n    const response = __challengeFunction({});\n    test.expect(response).toBe(null);\n  });\n});","answer":"function getLargestPropertyValue(obj) {    if (Object.keys(obj).length === 0) return null;\n  let maxValue = -Infinity;\n  let maxProp;\n  for (const prop in obj) {\n    if (obj[prop] > maxValue) {\n      maxValue = obj[prop];\n      maxProp = prop;\n    }\n  }\n  return obj[maxProp];}"},"nextChallenge":null},"__N_SSG":true}