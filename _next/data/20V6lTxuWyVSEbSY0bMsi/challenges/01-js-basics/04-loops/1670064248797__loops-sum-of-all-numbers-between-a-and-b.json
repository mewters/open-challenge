{"pageProps":{"title":"Challenge - Loops - Sum of all numbers between A and B","challenge":{"id":"1670064248797","isDone":false,"isCorrect":false,"title":"Loops - Sum of all numbers between A and B","description":"In the code bellow you have two numeric variables, \"a\" and \"b\".\n\nWrite a loop that calculates the sum of all the numbers from \"a\" to \"b\" and save it to the \"result\" variable.\n\nExample:\na = 1, b = 3;\noutput:\nresult === 6\nbecause 1 + 2 + 3 is 6","code":"[---hidden---\nfunction challenge(first, last){\n---hidden---]\nlet a, b;[---hidden---a=first;b=last;---hidden---]\nlet result = 0;\n[---editable---\n\n---editable---]\n[---hidden---\nreturn result;\n}\nreturn challenge;---hidden---]\n\n","testsCode":"test.describe('Loops - Sum of all numbers between A and B', () => {\n    let first = Math.floor(Math.random() * 10) + 3;\n    let last = Math.floor(Math.random() * 10) + 3 + first;\n    let result = 0;\n    for (let i = first; i <= last; i++) {\n        result += i;\n    }\n    test.it(`Sum of all numbers between ${first} and ${last} must be ${result}`, () => {\n        const response = __challengeFunction(first, last);\n        test.expect(response).toBe(result);\n    });\n    first = Math.floor(Math.random() * 10) + 3;\n    last = Math.floor(Math.random() * 10) + 3 + first;\n    result = 0;\n    for (let i = first; i <= last; i++) {\n        result += i;\n    }\n    test.it(`Sum of all numbers between ${first} and ${last} must be ${result}`, () => {\n        const response = __challengeFunction(first, last);\n        test.expect(response).toBe(result);\n    });\n});","answer":"let a, b;let result = 0;\nfor (let i = a; i <= b; i++) {\n    result += i;\n}\n"},"previousChallenge":{"id":"1670063437977","isDone":false,"isCorrect":false,"title":"Loops - Repeat a char n times","description":"In this challenge you will receive a number, n, and a string, str. \n\nYou should run a loop n times and concatenate the string to the \"result\" variable each time. \n\nFor example, if n is 3 and str is \"a\", the result string should be \"aaa\". \nIf n is 5 and str is \"b\", the result string should be \"bbbbb\".","code":"[---hidden---\nfunction challenge(number, string){\n---hidden---]\nlet n, str;[---hidden---n = number;str = string;---hidden---]let result = '';\n[---editable---\n\n---editable---]\n[---hidden---\n return result;\n}\nreturn challenge;\n---hidden---]","testsCode":"test.describe('Loops in depth', () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    let randomNumber = Math.floor(Math.random() * 10) + 3;\n    let randomString = letters[Math.floor(Math.random() * letters.length)];;\n    test.it(`Loop ${randomNumber} times, concatenating string \"${randomString}\"`, () => {\n        const response = __challengeFunction(randomNumber, randomString);\n        test.expect(response).toBe(randomString.repeat(randomNumber));\n    });\n    randomNumber = Math.floor(Math.random() * 10) + 3;\n    randomString = letters[Math.floor(Math.random() * letters.length)];;\n    test.it(`Loop ${randomNumber} times, concatenating string \"${randomString}\"`, () => {\n        const response = __challengeFunction(randomNumber, randomString);\n        test.expect(response).toBe(randomString.repeat(randomNumber));\n    });\n})","answer":"let n, str;let result = '';\nresult = str.repeat(n)\n","chosen":false},"nextChallenge":null},"__N_SSG":true}