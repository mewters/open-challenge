{"pageProps":{"title":"Challenge - Access Array Element","challenge":{"id":"1671644084161","isDone":false,"isCorrect":false,"title":"Access Array Element","description":"Here we have a function called getElement that takes in an array and an index. Return the element at that index. If the index is out of bounds, the function should return null.","code":"function getElement(myArray, index){[---editable---\n\n\n---editable---]}[---hidden---return getElement;---hidden---]","testsCode":"test.describe('Access Array Element', () => {\n    test.it('should return the element at the given index', () => {\n        const response = __challengeFunction([1, 2, 3, 4, 5], 2);\n        test.expect(response).toBe(3);\n    });\n    test.it('should return null if the index is out of bounds', () => {\n        const response = __challengeFunction([1, 2, 3, 4, 5], 10);\n        test.expect(response).toBe(null);\n    });\n});","answer":"function getElement(myArray, index){    if(index > myArray.length){\n        return null;\n    }\n    return myArray[index];}","chosen":false},"previousChallenge":null,"nextChallenge":{"id":"1671643798211","isDone":false,"isCorrect":false,"title":"Find Maximum Value in Array","description":"In the code bellow you have a function called \"findMax\" that takes in an array of numbers. Return the maximum value in the array. If the array is empty, the function should return 0.","code":"function findMax(numbers){[---editable---\n\n\n---editable---]\n}[---hidden--- return findMax;---hidden---]","testsCode":"test.describe('Find Maximum Value in Array', () => {\n    test.it('should return the maximum value in the array [1, 2, 3, 4, 5]', () => {\n        const response = __challengeFunction([1, 2, 3, 4, 5]);\n        test.expect(response).toBe(5);\n    });\n    test.it('should return the maximum value in the array [7, 6, 8, 1, 3, 6]', () => {\n        const response = __challengeFunction([7, 6, 8, 1, 3, 6]);\n        test.expect(response).toBe(8);\n    });\n    test.it('should return 0 if the array is empty', () => {\n        const response = __challengeFunction([]);\n        test.expect(response).toBe(0);\n    });\n});","answer":"function findMax(numbers){    return numbers.length ? Math.max(...numbers) : 0;}","chosen":false}},"__N_SSG":true}